<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.weichu.mdesigner.common.mapper.MerchantGoodsSubtractMapper">
  <!-- 
  	eviction：缓存回收策略
		- LRU：最少使用原则，移除最长时间不使用的对象
		- FIFO：先进先出原则，按照对象进入缓存顺序进行回收
		- SOFT：软引用，移除基于垃圾回收器状态和软引用规则的对象
		- WEAK：弱引用，更积极的移除移除基于垃圾回收器状态和弱引用规则的对象
	flushInterval：刷新时间间隔，单位为毫秒，这里配置的100毫秒。如果不配置，那么只有在进行数据库修改操作才会被动刷新缓存区
	size：引用额数目，代表缓存最多可以存储的对象个数
	readOnly：是否只读，如果为true，则所有相同的sql语句返回的是同一个对象（有助于提高性能，但并发操作同一条数据时，可能不安全），如果设置为false，则相同的sql，后面访问的是cache的clone副本。
  <cache eviction="LRU" size="1024" readOnly="true"/>-->
  <resultMap id="BaseResultMap" type="com.weichu.mdesigner.common.entity.MerchantGoodsSubtract">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="merchant_id" jdbcType="INTEGER" property="merchantId" />
    <result column="constraint_type" jdbcType="INTEGER" property="constraintType" />
    <result column="consume_price" jdbcType="DECIMAL" property="consumePrice" />
    <result column="constraint_time_start" jdbcType="TIME" property="constraintTimeStart" />
    <result column="constraint_time_end" jdbcType="TIME" property="constraintTimeEnd" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="amount1" jdbcType="DECIMAL" property="amount1" />
    <result column="discount" jdbcType="DECIMAL" property="discount" />
    <result column="amount2" jdbcType="DECIMAL" property="amount2" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="enabled" jdbcType="CHAR" property="enabled" />
    <result column="effective_time" jdbcType="TIMESTAMP" property="effectiveTime" />
    <result column="expired_time" jdbcType="TIMESTAMP" property="expiredTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, merchant_id, constraint_type, consume_price, constraint_time_start, constraint_time_end, 
    type, amount1, discount, amount2, description, enabled, effective_time, expired_time, 
    create_time, modify_time
  </sql>
  <select id="selectByExample" parameterType="com.weichu.mdesigner.common.entity.MerchantGoodsSubtractExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from merchant_goods_subtract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from merchant_goods_subtract
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from merchant_goods_subtract
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.weichu.mdesigner.common.entity.MerchantGoodsSubtractExample">
    delete from merchant_goods_subtract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.weichu.mdesigner.common.entity.MerchantGoodsSubtract">
    insert into merchant_goods_subtract (id, merchant_id, constraint_type, 
      consume_price, constraint_time_start, constraint_time_end, 
      type, amount1, discount, 
      amount2, description, enabled, 
      effective_time, expired_time, create_time, 
      modify_time)
    values (#{id,jdbcType=INTEGER}, #{merchantId,jdbcType=INTEGER}, #{constraintType,jdbcType=INTEGER}, 
      #{consumePrice,jdbcType=DECIMAL}, #{constraintTimeStart,jdbcType=TIME}, #{constraintTimeEnd,jdbcType=TIME}, 
      #{type,jdbcType=INTEGER}, #{amount1,jdbcType=DECIMAL}, #{discount,jdbcType=DECIMAL}, 
      #{amount2,jdbcType=DECIMAL}, #{description,jdbcType=VARCHAR}, #{enabled,jdbcType=CHAR}, 
      #{effectiveTime,jdbcType=TIMESTAMP}, #{expiredTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.weichu.mdesigner.common.entity.MerchantGoodsSubtract">
    insert into merchant_goods_subtract
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="merchantId != null">
        merchant_id,
      </if>
      <if test="constraintType != null">
        constraint_type,
      </if>
      <if test="consumePrice != null">
        consume_price,
      </if>
      <if test="constraintTimeStart != null">
        constraint_time_start,
      </if>
      <if test="constraintTimeEnd != null">
        constraint_time_end,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="amount1 != null">
        amount1,
      </if>
      <if test="discount != null">
        discount,
      </if>
      <if test="amount2 != null">
        amount2,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="effectiveTime != null">
        effective_time,
      </if>
      <if test="expiredTime != null">
        expired_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="merchantId != null">
        #{merchantId,jdbcType=INTEGER},
      </if>
      <if test="constraintType != null">
        #{constraintType,jdbcType=INTEGER},
      </if>
      <if test="consumePrice != null">
        #{consumePrice,jdbcType=DECIMAL},
      </if>
      <if test="constraintTimeStart != null">
        #{constraintTimeStart,jdbcType=TIME},
      </if>
      <if test="constraintTimeEnd != null">
        #{constraintTimeEnd,jdbcType=TIME},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="amount1 != null">
        #{amount1,jdbcType=DECIMAL},
      </if>
      <if test="discount != null">
        #{discount,jdbcType=DECIMAL},
      </if>
      <if test="amount2 != null">
        #{amount2,jdbcType=DECIMAL},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=CHAR},
      </if>
      <if test="effectiveTime != null">
        #{effectiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expiredTime != null">
        #{expiredTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
    <selectKey keyProperty="id" resultType="java.lang.Integer">
      select LAST_INSERT_ID() as id
    </selectKey>
  </insert>
  <select id="countByExample" parameterType="com.weichu.mdesigner.common.entity.MerchantGoodsSubtractExample" resultType="java.lang.Long">
    select count(*) from merchant_goods_subtract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.weichu.mdesigner.common.entity.MerchantGoodsSubtract">
    update merchant_goods_subtract
    <set>
      <if test="merchantId != null">
        merchant_id = #{merchantId,jdbcType=INTEGER},
      </if>
      <if test="constraintType != null">
        constraint_type = #{constraintType,jdbcType=INTEGER},
      </if>
      <if test="consumePrice != null">
        consume_price = #{consumePrice,jdbcType=DECIMAL},
      </if>
      <if test="constraintTimeStart != null">
        constraint_time_start = #{constraintTimeStart,jdbcType=TIME},
      </if>
      <if test="constraintTimeEnd != null">
        constraint_time_end = #{constraintTimeEnd,jdbcType=TIME},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="amount1 != null">
        amount1 = #{amount1,jdbcType=DECIMAL},
      </if>
      <if test="discount != null">
        discount = #{discount,jdbcType=DECIMAL},
      </if>
      <if test="amount2 != null">
        amount2 = #{amount2,jdbcType=DECIMAL},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=CHAR},
      </if>
      <if test="effectiveTime != null">
        effective_time = #{effectiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expiredTime != null">
        expired_time = #{expiredTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.weichu.mdesigner.common.entity.MerchantGoodsSubtract">
    update merchant_goods_subtract
    set merchant_id = #{merchantId,jdbcType=INTEGER},
      constraint_type = #{constraintType,jdbcType=INTEGER},
      consume_price = #{consumePrice,jdbcType=DECIMAL},
      constraint_time_start = #{constraintTimeStart,jdbcType=TIME},
      constraint_time_end = #{constraintTimeEnd,jdbcType=TIME},
      type = #{type,jdbcType=INTEGER},
      amount1 = #{amount1,jdbcType=DECIMAL},
      discount = #{discount,jdbcType=DECIMAL},
      amount2 = #{amount2,jdbcType=DECIMAL},
      description = #{description,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=CHAR},
      effective_time = #{effectiveTime,jdbcType=TIMESTAMP},
      expired_time = #{expiredTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 以下是自己手动写的, 上面还有insert返回id -->
  <select id="listAll" resultType="hashmap">
  	select t.id, t.merchant_id, t.constraint_type, t.consume_price, t.type, t.amount1, t.discount, t.amount2, t.description, t.enabled,
  		date_format(t.constraint_time_start,'%H:%i') as constraint_time_start,
  		date_format(t.constraint_time_end,'%H:%i') as constraint_time_end,
		date_format(t.effective_time,'%Y-%m-%d') as effective_time,
		date_format(t.expired_time,'%Y-%m-%d') as expired_time,
		(case 
        when t.effective_time is null then 1
        when t.effective_time &lt;= now() then 1
		else 0
		end) as effective_status,
		( case
		when t.expired_time is null then 0
        when t.expired_time &lt; now() then 1
		else 0
		end) as expired_status from merchant_goods_subtract t
	where t.merchant_id = #{merchantId,jdbcType=INTEGER}
  </select>
  
  <!-- 入库之后查询明细，入库规则历史明细表，为运营分析提供数据基础 -->
  <select id='listById' resultType="hashmap">
  	select t.id, t.merchant_id, t.constraint_type, t.consume_price, t.type, t.amount1, t.discount, t.amount2, t.description, t.enabled,
  		date_format(t.constraint_time_start,'%H:%i') as constraint_time_start,
  		date_format(t.constraint_time_end,'%H:%i') as constraint_time_end,
		date_format(t.effective_time,'%Y-%m-%d') as effective_time,
		date_format(t.expired_time,'%Y-%m-%d') as expired_time,
		(case 
        when t.effective_time is null then 1
        when t.effective_time &lt;= now() then 1
		else 0
		end) as effective_status,
		( case
		when t.expired_time is null then 0
        when t.expired_time &lt; now() then 1
		else 0
		end) as expired_status from merchant_goods_subtract t
	where t.merchant_id = #{merchantId,jdbcType=INTEGER} and t.id = #{id}
  </select>
  
  <!--根据id、商家id查询 -->
  <select id="selectById" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from merchant_goods_subtract
    where id = #{id,jdbcType=INTEGER} and merchant_id = #{merchantId,jdbcType=INTEGER}
  </select>
  <!-- 启用/禁用 -->
  <update id="updateEnabled">
  	update merchant_goods_subtract set enabled = #{enabled,jdbcType=CHAR} where
  	merchant_id = #{merchantId,jdbcType=INTEGER} and id = #{id,jdbcType=INTEGER}
  </update>
  <!-- 查询当前有效的减免规则 -->
  <select id="listEffectiveSubtract" resultType="hashmap">
  	select t.id, t.merchant_id, t.constraint_type, t.consume_price, t.type, t.amount1, t.discount, t.amount2, t.description, t.enabled,
  		date_format(t.constraint_time_start,'%H:%i') as constraint_time_start,
  		date_format(t.constraint_time_end,'%H:%i') as constraint_time_end,
		date_format(t.effective_time,'%Y-%m-%d') as effective_time,
		date_format(t.expired_time,'%Y-%m-%d') as expired_time from merchant_goods_subtract t
	where (case 
        when t.effective_time is null then 1
        when t.effective_time &lt;= #{orderTime,jdbcType=TIMESTAMP} then 1
		else 0
		end) = 1 and ( case
		when t.expired_time is null then 0
        when t.expired_time &lt; #{orderTime,jdbcType=TIMESTAMP} then 1
		else 0
		end) = 0 and t.enabled = '1' and t.merchant_id = #{merchantId,jdbcType=INTEGER}
		order by constraint_type asc, consume_price asc
  </select>
  <!-- 校验1=减免,2=折扣规则, 2者排斥 (如果constraint_type=1 消费满多少,需要校验生效时间与失效时间是否存在交集)
  	如果constraint_type=2 具体时间段 需要在进一步校验时间段内是否存在交集(先不做这一步，全部用生效时间与失效时间判断)
  -->
  <select id="countByvalidateRule" resultType="java.lang.Long">
  	SELECT count(*) FROM merchant_goods_subtract t1
  	<where>
  		<if test="expiredTime != null">
  			t1.effective_time &lt;= #{expiredTime,jdbcType=TIMESTAMP}
  		</if>
  		and (case 
			when t1.expired_time is null then 1
			when t1.expired_time &gt;= #{effectiveTime,jdbcType=TIMESTAMP} then 1
			else 0
			end) = 1 and t1.enabled = '1'
		and t1.type = #{type} and t1.merchant_id = #{merchantId}
  	</where>
  </select>
</mapper>